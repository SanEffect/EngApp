
selectLastInsertedRowId:
SELECT last_insert_rowid();

CREATE TABLE Record(
    id TEXT NOT NULL PRIMARY KEY,
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    creationDate INTEGER NOT NULL,
    isDeleted INTEGER AS Boolean NOT NULL,
    isDraft INTEGER AS Boolean NOT NULL,
    backgroundColor TEXT NOT NULL
);

insertRecord:
INSERT INTO Record(id, title, description, creationDate, isDeleted, isDraft, backgroundColor) VALUES (?,?,?,?,?,?,?);

updateRecord:
UPDATE Record SET title = ?, description = ?, isDeleted = ?, isDraft = ?, backgroundColor = ? WHERE id = ?;

deleteRecord:
DELETE FROM Record WHERE id = ?;

selectAllRecord:
SELECT * FROM Record;

selectRecordById:
SELECT * FROM Record WHERE id = ?;
-- SELECT EXISTS(SELECT 1 FROM Record WHERE id = ? LIMIT 1);

getRecordsCount:
SELECT count(*) FROM Record;

-- getLettersCount:
-- SELECT LENGTH(REGEXP_REPLACE(title || description, '[[:space:]]', '')) AS total_letters FROM Record;
-- SELECT sum(length(trim(title)) + lenght(replace(description, ' ', ''))) FROM Record;
-- SELECT length(trim(title)) + length(trim(description)) FROM Record;

-- =============================================================

CREATE TABLE Label(
    id TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    color TEXT NOT NULL
);

insertLabel:
INSERT INTO Label (id, name, color) VALUES (?, ?, ?);

updateLabel:
UPDATE Label SET name = ?, color = ? WHERE id = ?;

selectAllLabels:
SELECT * FROM Label;

selectLabelById:
SELECT * FROM Label WHERE id = ?;

deleteLabelById:
DELETE FROM Label WHERE id = ?;

-- =============================================================

-- CREATE TABLE RecordLabelCrossRef(
--     id TEXT NOT NULL PRIMARY KEY,
--     recordId TEXT NOT NULL,
--     labelId TEXT NOT NULL
-- );
CREATE TABLE RecordLabelCrossRef(
    recordId TEXT NOT NULL,
    labelId TEXT NOT NULL,
    PRIMARY KEY (recordId, labelId),
    FOREIGN KEY (recordId) REFERENCES Record(id) ON DELETE CASCADE,
    FOREIGN KEY (labelId) REFERENCES Label(id) ON DELETE CASCADE
);

insertRecordLabelCrossRef:
INSERT INTO RecordLabelCrossRef(recordId, labelId) VALUES (?, ?);

selectRecordWithLabels:
SELECT R.*, COALESCE(labels.labelIds, '') AS labelIds
FROM Record AS R
LEFT JOIN (
    SELECT RL.recordId, GROUP_CONCAT(L.id) AS labelIds
    FROM RecordLabelCrossRef AS RL
    JOIN Label AS L ON RL.labelId = L.id
    GROUP BY RL.recordId
) AS labels ON R.id = labels.recordId
WHERE R.id = ?;

deleteByRecordId:
DELETE FROM RecordLabelCrossRef WHERE recordId = ?;

deleteByLabelId:
DELETE FROM RecordLabelCrossRef WHERE labelId = ?;

-- SELECT R.*, label_info.label_names, label_info.label_colors
-- FROM Record AS R
-- JOIN (
--     SELECT RL.recordId,
--            GROUP_CONCAT(L.name) AS label_names,
--            GROUP_CONCAT(L.color) AS label_colors
--     FROM RecordLabelCrossRef AS RL
--     JOIN Label AS L ON RL.labelId = L.id
--     GROUP BY RL.recordId
-- ) AS label_info ON R.id = label_info.recordId
-- WHERE R.id = ?;

-- selectAllByRecordId:
-- SELECT *,
--        GROUP_CONCAT(L.name) AS label_names, GROUP_CONCAT(L.color) AS label_colors
-- FROM Record AS R
-- JOIN RecordLabelCrossRef AS RL ON R.id = RL.recordId
-- JOIN Label AS L ON RL.labelId = L.id
-- WHERE R.id = ?
-- GROUP BY R.id;

-- selectAllByRecordId:
-- SELECT *
-- FROM RecordLabelCrossRef AS rlcr
-- JOIN Record AS r ON rlcr.recordId = r.id
-- JOIN Label AS l ON rlcr.labelId = l.id
-- WHERE rlcr.recordId = ?;

-- selectAllByRecordId:
-- SELECT R.id AS record_id, R.title AS record_title, R.description AS record_description,
--        L.id AS label_id, L.name AS label_name, L.color AS label_color
-- FROM Record AS R
-- JOIN RecordLabelCrossRef AS RL ON R.id = RL.recordId
-- JOIN Label AS L ON RL.labelId = L.id
-- WHERE R.id = ?;

-- =============================================================

CREATE TABLE Stats(
    id INTEGER DEFAULT 1 NOT NULL PRIMARY KEY,
    recordsCount INTEGER NOT NULL,
    wordsCount INTEGER NOT NULL,
    lettersCount INTEGER NOT NULL
);

selectAllStats:
SELECT * FROM Stats;

insertStats:
INSERT INTO Stats(id, recordsCount, wordsCount, lettersCount) VALUES (?, ?, ?, ?);

updateStats:
UPDATE Stats SET recordsCount = ?, wordsCount = ?, lettersCount = ? WHERE id = 1;

deleteStats:
DELETE FROM Stats;